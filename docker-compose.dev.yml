services:
  postgres:
    image: postgres:15-alpine
    container_name: newsroom-postgres-dev
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
      POSTGRES_DB: ${DB_DATABASE:-newsroom}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/src/database/init:/docker-entrypoint-initdb.d
    networks:
      - newsroom-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: newsroom-backend-dev
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres123}
      - DB_DATABASE=${DB_DATABASE:-newsroom}
      - API_PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    networks:
      - newsroom-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: newsroom-frontend-dev
    env_file:
      - ./frontend/.env.docker
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - newsroom-network
    restart: unless-stopped

volumes:
  postgres_dev_data:

networks:
  newsroom-network:
    driver: bridge
